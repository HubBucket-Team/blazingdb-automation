#mandatory: branches
blazingdb_toolchain_branch=develop
custrings_branch=develop
cudf_branch=develop
blazingdb_protocol_branch=develop
blazingdb_io_branch=develop
blazingdb_communication_branch=develop
blazingdb_ral_branch=develop
blazingdb_orchestrator_branch=develop
blazingdb_calcite_branch=develop
pyblazing_branch=develop

#optional: enable build (default is true)
blazingdb_toolchain_enable=true
custrings_enable=true
cudf_enable=true
blazingdb_protocol_enable=true
blazingdb_io_enable=true
blazingdb_communication_enable=true
blazingdb_ral_enable=true
blazingdb_orchestrator_enable=true
blazingdb_calcite_enable=true
pyblazing_enable=true

#optional: build type for C/C++ projects (default is Release, i.e. -DCMAKE_BUILD_TYPE=Release)
# For debug mode use: Debug ... more info here: https://cmake.org/cmake/help/v3.12/variable/CMAKE_BUILD_TYPE.html#variable:CMAKE_BUILD_TYPE
custrings_build_type=Release
cudf_build_type=Release
blazingdb_protocol_build_type=Release
blazingdb_io_build_type=Release
blazingdb_communication_build_type=Release
blazingdb_ral_build_type=Release
blazingdb_orchestrator_build_type=Release

#optional: tests build & run (default is false)
blazingdb_toolchain_tests=false
custrings_tests=false
cudf_tests=false
blazingdb_protocol_tests=false
blazingdb_io_tests=false
blazingdb_communication_tests=false
blazingdb_ral_tests=false
blazingdb_orchestrator_tests=false
blazingdb_calcite_tests=false
pyblazing_tests=false

#optional: parallel builds for make -jX and mvn -T XC (default is 4)
blazingdb_toolchain_parallel=4
custrings_parallel=4
cudf_parallel=4
blazingdb_protocol_parallel=4
blazingdb_io_parallel=4
blazingdb_communication_parallel=4
blazingdb_ral_parallel=4
blazingdb_orchestrator_parallel=4
blazingdb_calcite_parallel=4

#optional: build options (C/C++ precompiler definitions, etc.)
# TODO percy add support for more that one definition
blazingdb_protocol_definitions=""
blazingdb_io_definitions=""
blazingdb_communication_definitions=""
blazingdb_ral_definitions="-DLOG_PERFORMANCE"
blazingdb_orchestrator_definitions=""

#optional: clean options for selected branch (will delete the build folder before build)
blazingdb_toolchain_clean_before_build=false
custrings_clean_before_build=false
cudf_clean_before_build=false
blazingdb_protocol_clean_before_build=false
blazingdb_io_clean_before_build=false
blazingdb_communication_clean_before_build=false
blazingdb_ral_clean_before_build=false
blazingdb_orchestrator_clean_before_build=false
blazingdb_calcite_clean_before_build=false
pyblazing_clean_before_build=false
