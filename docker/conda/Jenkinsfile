pipeline {
  agent {
      label 'slave-gpu'
  }

  options {
    ansiColor('xterm')
    timestamps()
    timeout(time: 1, unit: 'HOURS')
  }

  parameters {
    string(name: 'VERSION', defaultValue: '1.0', description: 'Blazingsql version')   
    string(name: 'PYTHON_VERSION', defaultValue: 'py35', description: 'Python version')   
    string(name: 'BUILD_NUMBER', defaultValue: '1', description: 'Build number')   
    string(name: 'LABELS', defaultValue: 'cuda9.2', description: 'Label to blazinsql package')   
  }


  environment {
    WORKDIR = "docker/conda"
    INPUT = "/home/mario21ic/blazingsql/output3/"
    OUTPUT = "/home/mario21ic/blazingsql/conda_output"
    //FILE_CONDA = "null.tar.gz"
  }

  stages {
    stage("Repository") {
      steps {
        checkout scm
      }
    }

    stage("Build conda image") {
      steps {
        dir("${WORKDIR}") {   
          sh "./conda_build.sh"
        }
      }
    }

    stage("Run conda image") { // 1ro
      steps {
        dir("${WORKDIR}") {
          script {
            sh "sudo rm -rf ${OUTPUT}/blazingsql-.*"
            sh "./conda_run.sh ${INPUT} ${OUTPUT}"
          }
        }
      }
    }
    
    stage("Publish on conda cloud") {
      steps {
        dir("${WORKDIR}") {          
          sh "./conda_run_upload.sh ${OUTPUT}/blazingsql-${VERSION}-${PYTHON_VERSION}_${BUILD_NUMBER}.tar.bz2 ${params.LABELS}"
        }
      }
    }
  }
}
