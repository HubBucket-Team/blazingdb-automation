pipeline {
  agent {
      label 'slave-gpu'
  }

  parameters {
    booleanParam(name: 'PUBLISH', defaultValue: false, description: 'Publish to Docker Hub')
    string(name: 'SLACK_CHANNEL', defaultValue: '#deploys', description: '')
    string(name: 'CUDF_BRANCH', defaultValue: '#develop', description: '')
    string(name: 'BLAZINGDB_PROTOCOL_BRANCH', defaultValue: '#develop', description: '')
    string(name: 'BLAZINGDB_IO_BRANCH', defaultValue: '#develop', description: '')
    string(name: 'BLAZINGDB_RAL_BRANCH', defaultValue: '#develop', description: '')
    string(name: 'BLAZINGDB_ORCHESTRATOR_BRANCH', defaultValue: '#develop', description: '')
    string(name: 'BLAZINGDB_CALCITE_BRANCH', defaultValue: '#develop', description: '')
    string(name: 'PYBLAZING_BRANCH', defaultValue: '#develop', description: '')
  }

  stages {
    stage("Repository") {
      steps {
        checkout scm
      }
    }
    
    stage("Build") {
      steps {
        dir("docker/") {
          sh "./build-deploy.sh ${env.BUILD_NUMBER} ${param.CUDF_BRANCH} ${param.BLAZINGDB_PROTOCOL_BRANCH} ${param.BLAZINGDB_IO_BRANCH} ${param.BLAZINGDB_RAL_BRANCH} ${param.BLAZINGDB_ORCHESTRATOR_BRANCH} ${param.BLAZINGDB_CALCITE_BRANCH} ${param.PYBLAZING_BRANCH} "
        }
      }
    }
    
    stage("Publish") {
      when {
        expression {
          return params.PUBLISH ==~ /(?i)(Y|YES|T|TRUE|ON|RUN)/
        }
      }
      steps {
        build job: "02.PUBLISH_BLAZINGSQL_DOCKERHUB", parameters: [
          [$class: 'StringParameterValue', name: 'IMAGE', value: "blazingsql/deploy:${env.BUILD_NUMBER}"],
          [$class: 'StringParameterValue', name: 'SLACK_CHANNEL', value: "#devops"]
        ]
      }
    }
  }
}
